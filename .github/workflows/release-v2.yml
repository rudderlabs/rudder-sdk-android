name: Release-v2

on:
  pull_request:
    branches:
      - master-v2
    types:
      - closed
jobs:
  release-v2:
    if: (startsWith(github.event.pull_request.head.ref, 'release-v2/') || startsWith(github.event.pull_request.head.ref, 'hotfix-release-v2/')) && github.event.pull_request.merged == true # only merged pull requests must trigger this job
    runs-on: ubuntu-latest
    environment: deployment
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: cache gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-core-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-core-

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1

      - name: Set Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install node_modules
        run: |
          npm ci

      - name: Get the two latest versions
        run: |
          CURRENT_VERSION=$(git tag -l "v*" --sort=-version:refname | head -n 1)
          LAST_VERSION=$(git tag -l "v*" --sort=-version:refname | head -n 2 | awk 'NR == 2 { print $1 }')
          
          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: $LAST_VERSION"
          
          echo "current_version=$(echo $CURRENT_VERSION)" >> $GITHUB_ENV
          echo "last_version=$(echo $LAST_VERSION)" >> $GITHUB_ENV
          echo "DATE=$(date)" >> $GITHUB_ENV
      - name: Publish release to sonatype
        run: |
          git fetch --no-tags --prune --depth=100 origin master-v2
          npm run release:sonatype -- --base=$last_version --head=$current_version

        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}

          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.NEXUS_PASSWORD }}
          SIGNING_PRIVATE_KEY_BASE64: ${{ secrets.SIGNING_PRIVATE_KEY_BASE64 }}